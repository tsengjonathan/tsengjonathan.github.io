{"version":3,"sources":["components/Title.jsx","Home.jsx","Account.jsx","components/NavItem.jsx","App.jsx","serviceWorker.js","index.jsx","resume.pdf"],"names":["Title","radians","useSpring","to","_to","Object","asyncToGenerator","regenerator_default","a","mark","_callee","next","wrap","_context","prev","Math","PI","stop","_x","apply","this","arguments","from","config","duration","reset","react_default","createElement","web","h1","style","transform","interpolate","r","concat","sin","className","Home","Fragment","href","github","color","linkedin","resume","file_text","Account","_ref","setUser","_useState","useState","_useState2","slicedToArray","show","setShow","handleClose","_useState3","_useState4","inputUsername","setInputUsername","_useState5","_useState6","inputPassword","setInputPassword","_useState7","_useState8","validated","setValidated","handleValidate","_useState9","_useState10","validForm","setValidForm","handleValidForm","handleInvalidForm","es_Nav","type","onClick","icons_user","Modal","onHide","centered","Body","Form","Group","Label","Control","isValid","isInvalid","onChange","e","target","value","InputGroup","Feedback","Footer","Button","data","username","password","fetch","method","headers","Content-Type","body","JSON","stringify","then","res","json","response","_","assign","loggedIn","catch","finally","NavItem","active","name","visible","Nav_default","Item","Link","defaultProps","App","isAdmin","createdAt","updatedAt","user","Container_default","react_router_dom","Navbar_default","bg","variant","components_NavItem","src_Account","react_router","path","exact","component","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.48d0cfba.chunk.js","sourcesContent":["import React from 'react';\nimport { useSpring, animated } from 'react-spring';\n\nexport default function Title() {\n  const interp = () => r => `translate3d(0, ${5 * Math.sin(r + (2 * Math.PI) / 1.6)}px, 0)`;\n\n  const { radians } = useSpring({\n    to: async (next) => {\n      // eslint-disable-next-line no-await-in-loop\n      while (1) await next({ radians: 2 * Math.PI });\n    },\n    from: { radians: 0 },\n    config: { duration: 3500 },\n    reset: true,\n  });\n\n  return (\n    <animated.h1\n      style={{ transform: radians.interpolate(interp()) }}\n      className=\"text-monospace text-uppercase text-white text-center\"\n    >\n      Jonathan Tseng\n    </animated.h1>\n  );\n}\n","import React from 'react';\nimport { FileText, GitHub, Linkedin } from 'react-feather';\nimport resume from './resume.pdf';\nimport Title from './components/Title';\n\nfunction Home() {\n  return (\n    <>\n      <Title />\n      <div className=\"d-flex justify-content-center\">\n        <div className=\"icon\">\n          <a href=\"https://github.com/tsengjonathan\">\n            <GitHub color=\"white\" />\n          </a>\n        </div>\n        <div className=\"icon\">\n          <a href=\"https://linkedin.com/in/tsengjonathan\">\n            <Linkedin color=\"white\" />\n          </a>\n        </div>\n        <div className=\"icon\">\n          <a href={resume}>\n            <FileText color=\"white\" />\n          </a>\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default Home;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { User } from 'react-feather';\nimport {\n  Button, Form, InputGroup, Modal, Nav,\n} from 'react-bootstrap';\nimport _ from 'lodash';\n\nfunction Account({ setUser }) {\n  const [show, setShow] = useState(false);\n  const handleClose = () => setShow(false);\n  const handleOpen = () => setShow(true);\n\n  const [inputUsername, setInputUsername] = useState('');\n  const [inputPassword, setInputPassword] = useState('');\n\n  const [validated, setValidated] = useState(false);\n  const handleValidate = () => setValidated(true);\n\n  const [validForm, setValidForm] = useState(false);\n  const handleValidForm = () => setValidForm(true);\n  const handleInvalidForm = () => setValidForm(false);\n\n  const submitForm = () => {\n    const data = {\n      username: inputUsername || '',\n      password: inputPassword || '',\n    };\n\n    fetch('/api/login', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(data),\n    })\n      .then(res => res.json())\n      .then(response => _.assign({ loggedIn: true }, setUser(response)))\n      .then(handleValidForm)\n      .then(handleClose)\n      .catch(handleInvalidForm)\n      .finally(handleValidate);\n  };\n\n  return (\n    <>\n      <Nav className=\"justify-content-end\">\n        <button className=\"icon-button\" type=\"button\" onClick={handleOpen}>\n          <User color=\"white\" />\n        </button>\n      </Nav>\n      <Modal show={show} onHide={handleClose} centered>\n        <Modal.Body>\n          <Form>\n            <Form.Group>\n              <Form.Label>Username</Form.Label>\n              <Form.Control\n                type=\"text\"\n                isValid={validated && validForm}\n                isInvalid={validated && !validForm}\n                onChange={e => setInputUsername(e.target.value)}\n              />\n            </Form.Group>\n            <Form.Group>\n              <Form.Label>Password</Form.Label>\n              <InputGroup>\n                <Form.Control\n                  type=\"password\"\n                  isValid={validated && validForm}\n                  isInvalid={validated && !validForm}\n                  onChange={e => setInputPassword(e.target.value)}\n                />\n                <Form.Control.Feedback type=\"invalid\">Incorrect username or password</Form.Control.Feedback>\n              </InputGroup>\n            </Form.Group>\n          </Form>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button onClick={handleClose}>Close</Button>\n          <Button onClick={submitForm}>Login</Button>\n        </Modal.Footer>\n      </Modal>\n    </>\n  );\n}\n\nAccount.propTypes = {\n  setUser: PropTypes.func.isRequired,\n};\n\nexport default Account;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Nav from 'react-bootstrap/Nav';\n\nfunction NavItem({\n  href, active, name, visible,\n}) {\n  if (!visible) {\n    return null;\n  }\n\n  return (\n    <Nav.Item>\n      <Nav.Link href={href} active={active} className=\"text-monospace text-uppercase\">\n        {name}\n      </Nav.Link>\n    </Nav.Item>\n  );\n}\n\nNavItem.propTypes = {\n  href: PropTypes.string,\n  active: PropTypes.bool,\n  name: PropTypes.string,\n  visible: PropTypes.bool,\n};\n\nNavItem.defaultProps = {\n  href: '#',\n  active: false,\n  name: '?',\n  visible: true,\n};\n\nexport default NavItem;\n","import React, { useState } from 'react';\nimport './App.css';\nimport Container from 'react-bootstrap/Container';\nimport Navbar from 'react-bootstrap/Navbar';\nimport Nav from 'react-bootstrap/Nav';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport Home from './Home';\nimport Account from './Account';\nimport NavItem from './components/NavItem';\n\nfunction App() {\n  const [user, setUser] = useState({\n    loggedIn: false,\n    username: null,\n    isAdmin: false,\n    createdAt: null,\n    updatedAt: null,\n  });\n\n  const setUserJson = response => setUser({\n    loggedIn: true,\n    username: response.username,\n    isAdmin: response.isAdmin,\n    createdAt: response.createdAt,\n    updatedAt: response.updatedAt,\n  });\n\n  return (\n    <Container>\n      <Router>\n        <Navbar bg=\"dark\" variant=\"dark\">\n          <Nav>\n            <NavItem href=\"/\" active name=\"Home\" />\n            <NavItem href=\"/news\" name=\"News\" visible={user.loggedIn} />\n          </Nav>\n          <Account setUser={setUserJson} />\n        </Navbar>\n\n        <div className=\"body\">\n          <Route path=\"/\" exact component={Home} />\n        </div>\n      </Router>\n    </Container>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './custom.scss';\n// Put any other imports below so that CSS from your\n// components takes precedence over default styles.\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/resume.5d3fc579.pdf\";"],"sourceRoot":""}