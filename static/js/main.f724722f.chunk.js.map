{"version":3,"sources":["resume.pdf","components/Title.jsx","home/Home.jsx","home/index.js","news/data.js","news/NewsCard.jsx","news/News.jsx","news/index.js","components/NavItem.jsx","App.jsx","serviceWorker.js","index.jsx"],"names":["module","exports","__webpack_require__","p","Title","radians","useSpring","to","_to","Object","asyncToGenerator","regenerator_default","a","mark","_callee","next","wrap","_context","prev","Math","PI","stop","_x","apply","this","arguments","from","config","duration","reset","react_default","createElement","web","h1","style","transform","interpolate","r","concat","sin","className","Home","Fragment","href","github","color","linkedin","resume","file_text","hackerNews","id","response","fetch","sent","abrupt","json","getTopStories","startIdx","length","undefined","endIdx","callback","then","slice","ids","map","fetchItem","promises","Promise","all","stories","NewsCard","_ref","by","score","time","title","url","momentTime","moment","unix","Card","width","target","rel","Body","Subtitle","fontSize","fromNow","defaultProps","pagination","News","_useState","useState","_useState2","slicedToArray","setStories","_useState3","_useState4","storyCount","setStoryCount","useEffect","topStories","storiesCallback","es_Container","alignItems","story","news_NewsCard","key","Button","variant","onClick","newStoryCount","paginate","NavItem","active","name","Nav_default","Item","Link","App","pathname","window","location","Container_default","react_router_dom","Navbar_default","bg","components_NavItem","react_router","path","exact","component","Boolean","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.f724722f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/resume.3b01cf68.pdf\";","import React from 'react';\nimport { useSpring, animated } from 'react-spring';\n\nexport default function Title() {\n  const interp = () => r => `translate3d(0, ${5 * Math.sin(r + (2 * Math.PI) / 1.6)}px, 0)`;\n\n  const { radians } = useSpring({\n    to: async (next) => {\n      // eslint-disable-next-line no-await-in-loop\n      while (1) await next({ radians: 2 * Math.PI });\n    },\n    from: { radians: 0 },\n    config: { duration: 3500 },\n    reset: true,\n  });\n\n  return (\n    <animated.h1\n      style={{ transform: radians.interpolate(interp()) }}\n      className=\"text-monospace text-uppercase text-white text-center\"\n    >\n      Jonathan Tseng\n    </animated.h1>\n  );\n}\n","import React from 'react';\nimport { FileText, GitHub, Linkedin } from 'react-feather';\nimport resume from '../resume.pdf';\nimport Title from '../components/Title';\n\nfunction Home() {\n  return (\n    <>\n      <Title />\n      <div className=\"d-flex justify-content-center\">\n        <div className=\"icon\">\n          <a href=\"https://github.com/tsengjonathan\">\n            <GitHub color=\"white\" />\n          </a>\n        </div>\n        <div className=\"icon\">\n          <a href=\"https://linkedin.com/in/tsengjonathan\">\n            <Linkedin color=\"white\" />\n          </a>\n        </div>\n        <div className=\"icon\">\n          <a href={resume}>\n            <FileText color=\"white\" />\n          </a>\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default Home;\n","import Home from './Home';\n\nexport default Home;\n","const hackerNews = 'https://hacker-news.firebaseio.com/v0';\n\nasync function fetchItem(id) {\n  const response = await fetch(`${hackerNews}/item/${id}.json`);\n  return response.json();\n}\n\nfunction getTopStories(startIdx = 0, endIdx = 50, callback) {\n  fetch(`${hackerNews}/topstories.json`)\n    .then(response => response.json())\n    .then(json => json.slice(startIdx, endIdx))\n    .then(ids => ids.map(id => fetchItem(id)))\n    .then(promises => Promise.all(promises))\n    .then(stories => callback(stories));\n}\n\nexport default getTopStories;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Card } from 'react-bootstrap';\nimport moment from 'moment';\n\nfunction NewsCard({\n  id, by, score, time, title, url,\n}) {\n  const momentTime = moment.unix(time);\n  return (\n    <Card style={{ width: '100%' }}>\n      <a\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n        href={url || `https://news.ycombinator.com/item?id=${id}`}\n      >\n        <Card.Body>\n          <Card.Title>\n            {title}\n          </Card.Title>\n          <Card.Subtitle className=\"text-muted\" style={{ fontSize: '0.875rem' }}>\n            {`${score} points ${by} ${momentTime.fromNow()}`}\n          </Card.Subtitle>\n        </Card.Body>\n      </a>\n    </Card>\n  );\n}\n\nNewsCard.defaultProps = {\n  url: null,\n};\n\nNewsCard.propTypes = {\n  id: PropTypes.number.isRequired,\n  by: PropTypes.string.isRequired,\n  score: PropTypes.number.isRequired,\n  time: PropTypes.number.isRequired,\n  title: PropTypes.string.isRequired,\n  url: PropTypes.string,\n};\n\nexport default NewsCard;\n","import React, { useState, useEffect } from 'react';\nimport { Container, Button } from 'react-bootstrap';\nimport topStories from './data';\nimport NewsCard from './NewsCard';\n\nconst pagination = 50;\n\nfunction News() {\n  const [stories, setStories] = useState([]);\n  const [storyCount, setStoryCount] = useState(pagination);\n\n  useEffect(() => {\n    topStories(0, storyCount, (storiesCallback => setStories(storiesCallback)));\n  }, []);\n\n  function paginate() {\n    const newStoryCount = storyCount + pagination;\n    topStories(storyCount, newStoryCount,\n      (storiesCallback => setStories(stories.concat(storiesCallback))));\n    setStoryCount(newStoryCount);\n  }\n\n  return (\n    <Container style={{ alignItems: 'center' }}>\n      { stories.map((story) => {\n        const {\n          id, by, score, time, title, url,\n        } = story;\n        return (\n          <NewsCard\n            key={id}\n            id={id}\n            by={by}\n            score={score}\n            time={time}\n            title={title}\n            url={url}\n          />\n        );\n      })}\n      <Button variant=\"secondary\" onClick={() => paginate()} style={{ width: '20rem' }}>Load more</Button>\n    </Container>\n  );\n}\n\nexport default News;\n","import News from './News';\n\nexport default News;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Nav from 'react-bootstrap/Nav';\n\nfunction NavItem({ href, active, name }) {\n  return (\n    <Nav.Item>\n      <Nav.Link href={href} active={active} className=\"text-monospace text-uppercase\">\n        {name}\n      </Nav.Link>\n    </Nav.Item>\n  );\n}\n\nNavItem.propTypes = {\n  href: PropTypes.string,\n  active: PropTypes.bool,\n  name: PropTypes.string,\n};\n\nNavItem.defaultProps = {\n  href: '#',\n  active: false,\n  name: '?',\n};\n\nexport default NavItem;\n","import React from 'react';\nimport './App.css';\nimport Container from 'react-bootstrap/Container';\nimport Navbar from 'react-bootstrap/Navbar';\nimport Nav from 'react-bootstrap/Nav';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport Home from './home';\nimport News from './news';\nimport NavItem from './components/NavItem';\n\nfunction App() {\n  const { location } = window;\n  const { pathname } = location;\n  return (\n    <Container>\n      <Router>\n        <Navbar bg=\"dark\" variant=\"dark\">\n          <Nav>\n            <NavItem href=\"/\" active={pathname === '/'} name=\"Home\" />\n            <NavItem href=\"/news\" active={pathname === '/news'} name=\"News\" />\n          </Nav>\n        </Navbar>\n\n        <div className=\"body\">\n          <Route path=\"/\" exact component={Home} />\n          <Route path=\"/news\" exact component={News} />\n        </div>\n      </Router>\n    </Container>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './custom.scss';\n// Put any other imports below so that CSS from your\n// components takes precedence over default styles.\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}